{"version":3,"sources":["components/Filter/Filter.module.css","components/Form/Form.module.css","components/Section/Section.jsx","components/Form/Form.jsx","components/Contacts/Contacts.jsx","components/Filter/Filter.jsx","App.js","index.js","components/Contacts/Contacts.module.css"],"names":["module","exports","Section","title","children","className","styles","section","prototype","PropTypes","string","isRequired","node","Form","state","name","number","nameRandomId","nanoid","numberRandomId","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","addForm","label","htmlFor","onChange","input","type","pattern","required","id","btn","Component","Contacts","contacts","onDelete","map","contactItem","text","onClick","Filter","onFilter","App","filter","addContact","data","contact","find","con","toLowerCase","alert","prevState","sort","a","b","localeCompare","target","onContactsFilter","includes","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4f12eb20.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__2IyJX\",\"input\":\"Filter_input__2ZynU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addForm\":\"Form_addForm__1PhBN\",\"label\":\"Form_label__yM_Te\",\"input\":\"Form_input__1953F\",\"btn\":\"Form_btn__3DA3A\"};","import styles from \"./Section.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section className={styles.section}>\r\n      <h1 className={styles.title}>{title}</h1>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.prototype = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import styles from \"./Form.module.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport {nanoid} from \"nanoid\";\r\nimport React, { Component } from 'react';\r\n\r\n\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  nameRandomId = nanoid();\r\n  numberRandomId = nanoid();\r\n\r\n  handleChange = (e) => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n  \r\n  render() {\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.handleSubmit} className={styles.addForm}>\r\n          <label className={styles.label} htmlFor={this.nameRandomId}>\r\n            Name:\r\n            <input\r\n              onChange={this.handleChange}\r\n              value={this.state.name}\r\n              className={styles.input}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n            />\r\n          </label>\r\n\r\n          <label htmlFor={this.numberRandomId} className={styles.label}>\r\n            Number:\r\n            <input\r\n              className={styles.input}\r\n              value={this.state.number}\r\n              id={this.numberRandomId}\r\n              onChange={this.handleChange}\r\n              name=\"number\"\r\n              type=\"tel\"\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n              required\r\n            />\r\n          </label>\r\n          <button type=\"submit\" className={styles.btn}>\r\n            Add Contact\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Form;\r\n","import styles from \"./Contacts.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Contacts = ({ contacts, onDelete }) => {\r\n    return (\r\n        <ul>\r\n            {contacts.map(({ id, name, number }) => (\r\n                <li className={styles.contactItem} key={id}>\r\n                    <span className={styles.text}>{name}: </span>\r\n                    <span className={styles.text}>{number}</span>\r\n                    <button onClick={() => onDelete(id)} className={styles.btn}>\r\n                        Delete\r\n                    </button>\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    );\r\n}\r\n\r\nContacts.propTypes = {\r\n    contacts: PropTypes.shape({\r\n        id: PropTypes.number.isRequired,\r\n        name: PropTypes.string.isRequired,\r\n        number: PropTypes.number.isRequired,\r\n    }),\r\n    onDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Contacts;\r\n","import styles from \"./Filter.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\nconst Filter = ({ value, onFilter }) => {\r\n    return (\r\n<label className={styles.label}>\r\n      Find contacts by name\r\n      <input type=\"text\" value={value} onChange={onFilter} className={styles.input}></input>\r\n    </label>\r\n    )\r\n}\r\n\r\nFilter.propTypes = {\r\n  onFilter: PropTypes.func.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Filter;","import './App.css';\r\nimport React, { Component } from 'react';\r\nimport { nanoid } from \"nanoid\";\r\nimport Section from './components/Section';\r\nimport Form from './components/Form';\r\nimport Contacts from './components/Contacts';\r\nimport Filter from './components/Filter';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [\r\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n    ],\r\n    filter: \"\",\r\n  };\r\n\r\n  addContact = (data) => {\r\n    const contact = {\r\n      id: nanoid(),\r\n      name: data.name,\r\n      number: data.number,\r\n    };\r\n\r\n    if (\r\n      this.state.contacts.find(\r\n        (con) => con.name.toLowerCase() === contact.name.toLowerCase()\r\n      )\r\n    ) {\r\n      alert(`${contact.name} is already in contacts`);\r\n      return;\r\n    } else\r\n      this.setState((prevState) => ({\r\n        contacts: [...prevState.contacts, contact].sort((a, b) =>\r\n          a.name.localeCompare(b.name)\r\n        ),\r\n      }));\r\n  };\r\n\r\n  onFilter = (e) => {\r\n    this.setState({ filter: e.target.value });\r\n  };\r\n\r\n  onContactsFilter = () => {\r\n    const { contacts, filter } = this.state;\r\n    return contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase())\r\n    );\r\n  };\r\n\r\n  onDelete = (contactId) => {\r\n    this.setState((prevState) => ({\r\n      contacts: prevState.contacts.filter(\r\n        (contact) => contact.id !== contactId\r\n      ),\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { filter } = this.state;\r\n    return (\r\n      <>\r\n        <Section title=\"Phonebook\">\r\n          <Form onSubmit={this.addContact} />\r\n        </Section>\r\n        <Section title=\"Contacts\">\r\n          <Filter value={filter} onFilter={this.onFilter} />\r\n          <Contacts\r\n            contacts={this.onContactsFilter()}\r\n            onDelete={this.onDelete} />\r\n        </Section>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Contacts_btn__2QPTW\",\"input\":\"Contacts_input__1qAA_\"};"],"sourceRoot":""}